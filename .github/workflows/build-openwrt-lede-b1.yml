name: Build-OpenWrt-lede-b1

env:
  TZ: Asia/Shanghai

on:
  push:
    branches:
      - master
  workflow_dispatch:
  schedule:
    # * is a special character in YAML, so you have to quote this string
    - cron: '0 18 * * 0,2,4,5,6'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      BIN_PATH: $GITHUB_WORKSPACE/openwrt/bin

    steps:
      - name: Clone Repository
        uses: actions/checkout@v3

      - name: Build Environment Initialization
        run: |
          set +e
          docker rmi `docker images -q`
          echo "Deleting files, please wait ..."
          sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
          sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
          sudo -E apt-get update
          sudo -E apt-get -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E apt-get -y autoremove --purge
          sudo apt-get -qq clean

      - name: Clone source code
        env: 
          REPO_URL: https://github.com/coolsnowwolf/lede
          REPO_BRANCH: master
        run: |
          git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
          cd openwrt
        
      - name: Update & Install feeds
        working-directory: ./openwrt
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          ./scripts/feeds install -a

      - name: Configuration Customization - Build_x86_64
        env:
        CONFIG_FILE: 'x86_64.config'
        run: |
         [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
         chmod +x ./customize.sh && ./customize.sh
         cd openwrt && make defconfig
        
      - name: Download package
        working-directory: ./openwrt
        run: |
         make download -j$(nproc)
         find dl -size -1024c -exec ls -l {} \;
         find dl -size -1024c -exec rm -f {} \;

      - name: Build firmware
        working-directory: ./openwrt
        run: |
          echo -e "$(nproc) thread build."
          make -j$(nproc) V=s
        
      - name: Upload Packages
        uses: actions/upload-artifact@main
        with:
          name: Newifi3-d2-Packages-${{ env.FILE_DATE }}
          path: ${{ env.BIN_PATH }}/packages/

      - name: Upload Firmwares
        uses: actions/upload-artifact@main
        with:
          name: Newifi3-d2-Firmwares-${{ env.FILE_DATE }}
          path: ${{ env.BIN_PATH }}/targets/

      - name: Upload bin
        uses: actions/upload-artifact@main
        with:
          name: immortalwrt-ramips-mt7621-d-team_newifi-d2-squashfs-sysupgrade-${{ env.FILE_DATE }}
          path: ${{ env.BIN_PATH }}/targets/ramips/

      - name: Upload manifest
        uses: actions/upload-artifact@v3
        with:
          name: manifest-${{ env.FILE_DATE }}
          path: ${{ env.BIN_PATH }}/targets/ramips/mt7621/openwrt-ramips-mt7621-d-team_newifi-d2.manifest
