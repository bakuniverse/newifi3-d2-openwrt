name: Build-OpenWrt-lede-b1

env:
  TZ: Asia/Shanghai

on:
  push:
    branches:
      - master
  workflow_dispatch:
  schedule:
    # * is a special character in YAML, so you have to quote this string
    - cron: '0 18 * * 0,2,4,5,6'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      BIN_PATH: $GITHUB_WORKSPACE/openwrt/bin

    steps:
      - name: Clone Repository
        uses: actions/checkout@v3

      - name: Build Environment Initialization
        run: |
          sudo apt-get update
          sudo apt-get -qq remove --purge mysql* php* google* firefox ghc azure-cli \
          dotnet* powershell ruby-full zulu* llvm*
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
          
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /var/lib/docker
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/hostedtoolcache/go /opt/hostedtoolcache/Ruby /opt/hostedtoolcache/node

          sudo apt-get -qq autoremove --purge
          sudo apt-get -qq clean

      - name: Clone source code
        env: 
          REPO_URL: https://github.com/coolsnowwolf/lede
          REPO_BRANCH: master
        run: |
          git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
          cd openwrt
        
      - name: Update & Install feeds
          working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        ./scripts/feeds install -a

      - name: Configuration Customization - Build_x86_64
      env:
        CONFIG_FILE: 'x86_64.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x ./customize.sh && ./customize.sh
        cd openwrt && make defconfig
        
    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Build firmware
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s
        
      - name: Upload Packages
        uses: actions/upload-artifact@main
        with:
          name: Newifi3-d2-Packages-${{ env.FILE_DATE }}
          path: ${{ env.BIN_PATH }}/packages/

      - name: Upload Firmwares
        uses: actions/upload-artifact@main
        with:
          name: Newifi3-d2-Firmwares-${{ env.FILE_DATE }}
          path: ${{ env.BIN_PATH }}/targets/

      - name: Upload bin
        uses: actions/upload-artifact@main
        with:
          name: immortalwrt-ramips-mt7621-d-team_newifi-d2-squashfs-sysupgrade-${{ env.FILE_DATE }}
          path: ${{ env.BIN_PATH }}/targets/ramips/

      - name: Upload manifest
        uses: actions/upload-artifact@v3
        with:
          name: manifest-${{ env.FILE_DATE }}
          path: ${{ env.BIN_PATH }}/targets/ramips/mt7621/openwrt-ramips-mt7621-d-team_newifi-d2.manifest
